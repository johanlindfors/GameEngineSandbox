@startuml GameEngineSandbox
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

Person(player, "Player")

System_Boundary(game, "Flappy Bird") {
    Container(flappyBird, "flappyBird", "C++", "Game specific logic")
}

System_Boundary(engine, "Engine") {
    Container(application, "application")
    Container(input, "input")
    Container(gameLoop, "game-loop")
    Container(filesystem, "filesystem")
    Container(physics, "physics")
    Container(renderers, "renderers")
    Container(resources, "resources")
    Container(scenes, "scenes")
    Container(utilities, "utilities")
}

System_Boundary(thirdparty, "Thirdparty") {
    System_Ext(glm, "glm")
    System_Ext(angle, "angle")
    System_Ext(vcpkg, "vcpkg")
    System_Ext(tweeny, "tweeny")
}

Rel(player, flappyBird, Plays)

Rel(flappyBird, application, Uses)
Rel(flappyBird, gameLoop, Uses)
Rel(flappyBird, renderers, Uses)
Rel(flappyBird, resources, Uses)
Rel(flappyBird, input, Uses)
Rel(flappyBird, scenes, Uses)
Rel(flappyBird, physics, Uses)
Rel(flappyBird, tweeny, Uses)

Rel(application, gameLoop, Uses)
Rel(application, utilities, Uses)

Rel(filesystem, utilities, Uses)

Rel(gameLoop, input, Uses)
Rel(gameLoop, renderers, Uses)
Rel(gameLoop, resources, Uses)
Rel(gameLoop, scenes, Uses)
Rel(gameLoop, utilities, Uses)

Rel(physics, utilities, Uses)

Rel(resources, utilities, Uses)
Rel(resources, filesystem, Uses)
Rel(resources, glm, Uses)

Rel(scenes, renderers, Uses)
Rel(scenes, utilities, Uses)

Rel(renderers, utilities, Uses)
Rel(renderers, filesystem, Uses)
Rel(renderers, glm, Uses)

@enduml